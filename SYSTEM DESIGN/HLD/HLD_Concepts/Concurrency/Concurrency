Concurrency

Definition:
Concurrency is the ability of a system to handle(Manage) multiple tasks at the same time by switching between them efficiently, so that progress is made on all tasks without necessarily executing them simultaneously.
- using proper synchronization to ensure shared resources are accessed safely.

Key Characteristics:
Multiple tasks make progress independently.
Can be achieved via **multithreading, multitasking, multiprocessing, asynchronous programming**, or event-driven architectures.
Focuses on structure and design that allows simultaneous handling of tasks.
Improves throughput, responsiveness, and resource utilization.

Concurrency vs Parallelism:
| Aspect     | Concurrency                                     | Parallelism                                        |
| ---------- | ----------------------------------------------- | -------------------------------------------------- |
| Definition | **Managing multiple tasks at the same time**    | **Executing multiple tasks at the same time**      |
| Execution  | Interleaved execution on one or more processors | True simultaneous execution on multiple processors |
| Goal       | Efficient task handling, responsiveness         | Faster task completion                             |


Use Cases:
Web servers handling multiple client requests concurrently.

Benefits:
Better CPU utilization.
Improved system responsiveness.
Scalability for handling many tasks simultaneously.


**Concurrency = multiple tasks running concurrenty, Synchronization = rules to prevent them from clashing.**


**Synchronization** (multiple tasks are running synchronouly, ie: using shared resources without affecting each other)
Synchronization is a technique used within concurrent systems to coordinate access to shared resources and ensure correctness.
Synchronization is the coordination of multiple concurrent tasks to safely access shared resources, ensuring data remains consistent and race conditions are avoided.

**achieved using mutexes, locks, semaphores, monitors, atomic operations, etc.**